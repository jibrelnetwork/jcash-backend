# Generated by Django 2.0.4 on 2018-11-19 12:24

from django.db import migrations, transaction
from django.db.models import Q


def migrate_video(apps, schema_editor):
    Account = apps.get_model('api', 'Account')
    Document = apps.get_model('api', 'Document')
    DocumentVerification = apps.get_model('api', 'DocumentVerification')

    accounts = Account.objects.all()

    with transaction.atomic():
        for account in accounts:
            last_video = None
            try:
                last_video = Document.objects\
                    .filter(user=account.user)\
                    .filter(type='video')\
                    .latest('created_at')
            except Document.DoesNotExist:
                pass

            last_document_verification = None
            try:
                if account.type == 'personal':
                    last_document_verification = DocumentVerification.objects\
                        .filter(Q(user=account.user) & ~Q(personal=None))\
                        .latest('created_at')
                elif account.type == 'corporate':
                    last_document_verification = DocumentVerification.objects \
                        .filter(Q(user=account.user) & ~Q(corporate=None)) \
                        .latest('created_at')
            except DocumentVerification.DoesNotExist:
                pass

            if last_document_verification and last_video:
                last_document_verification.video_id = last_video.id
                last_document_verification.save()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0074_migrate_document_verifications'),
    ]

    operations = [
        migrations.RunPython(migrate_video),
    ]
