"""
Django settings for jcash project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import logging
from os.path import join, dirname
from datetime import datetime

import dj_database_url
from dotenv import load_dotenv

import jcash.api.signalhandlers


dotenv_path = join(dirname(__file__), '.env')
load_dotenv(dotenv_path)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


def here(path):
    return os.path.join(BASE_DIR, path)


import raven
import raven.exceptions

# There is no .git directory in output image, so we can't get information from it
# But CI/CD system places Git commit into version.txt file
try:
    CODE_VERSION = raven.fetch_git_sha(here(''))
except raven.exceptions.InvalidGitRepository:
    try:
        with open('version.txt') as version_file:
            CODE_VERSION = version_file.read().strip()
    except Exception:
        pass

RAVEN_CONFIG = {
    #!! 'dsn': os.environ.get('RAVEN_DSN'),
    # If you are using git, you can also automatically configure the
    # release based on the git info.
    'release': CODE_VERSION,
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '78fta+ic^6f*a+gngvllkmnmvqu=sdgtn5$*s8e=*li%7sqbs+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

SITE_ID = 1
# Application definition

INSTALLED_APPS = [
    # jcash apps
    'allauth',
    'allauth.account',
    'jcash.api',
 
    # contrib
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # 3rd-party apps
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth.registration',
    'rest_auth',
    'corsheaders',
    'raven.contrib.django.raven_compat',
    #'aldjemy',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jcash.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [here('jcash/appprocessor/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jcash.wsgi.application'

JCASH_DATABASE_URI = os.environ['JCASH_DATABASE_URI']

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {'default': dj_database_url.parse(JCASH_DATABASE_URI,
                                              conn_max_age=600)}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = here('static')
MEDIA_URL = '/media/'
MEDIA_ROOT = here('uploaded_media')


FILE_UPLOAD_PERMISSIONS = 0o644


EMAIL_HOST = 'smtp.mailgun.org'
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = True


ACCOUNT_CONFIRM_EMAIL_ON_GET = True


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
}

REST_AUTH_SERIALIZERS = {
    'LOGIN_SERIALIZER': 'jcash.api.serializers.LoginSerializer',
    'PASSWORD_RESET_SERIALIZER': 'jcash.api.serializers.CustomPasswordResetSerializer',
}

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'jcash.api.serializers.RegisterSerializer',
}

#from sqlalchemy.types import CHAR
#ALDJEMY_DATA_TYPES = {
#    'UUIDField': CHAR,
#}

CORS_ORIGIN_ALLOW_ALL = True

ONFIDO_API_KEY = os.environ['ONFIDO_API_KEY']


RECAPTCHA_ENABLED = False
RECAPTCHA_PRIVATE_KEY = os.environ['RECAPTCHA_PRIVATE_KEY']

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = '/email-verified/'
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'

ACCOUNT_ADAPTER = 'jcash.api.utils.AccountAdapter'
ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN = 20
OLD_PASSWORD_FIELD_ENABLED = True

GA_ID = os.environ['GA_ID']

COUNTRIES_NOT_ALLOWED = ['USA']

#######################################################################
#
#             LEGACY SETTINGS
#
# ######################################################################

# DB settings
DATABASE_HOST = 'localhost'
DATABASE_NAME = 'jcashdb'
DATABASE_USER = 'jcashuser'
DATABASE_PASS = 'password'

# Sqlalchemy settings
SQLALCHEMY_ECHO = True

# Flask SQLAlchemy
SQLALCHEMY_TRACK_MODIFICATIONS = False

# Celery configuration
CELERY_NAME = "jibreljcashcelery"
CELERY_BROKER_URL = "pyamqp://guest:guest@localhost:5672//"

# Email notifications
EMAIL_NOTIFICATIONS__ENABLED = True
EMAIL_NOTIFICATIONS__MAILGUN_SENDER = 'Jibrel Network <donotreply@mailgun.jibrel.network>'
EMAIL_NOTIFICATIONS__SENDGRID_SENDER = 'Jibrel Network <donotreply@sendgrid.jibrel.network>'
EMAIL_NOTIFICATIONS__BACKUP_ENABLED = False
EMAIL_NOTIFICATIONS__BACKUP_SENDER = 'Jibrel Backup <backup@mailgun.jibrel.network>'
EMAIL_NOTIFICATIONS__BACKUP_ADDRESS = 'salebackup@jibrel.network'
EMAIL_NOTIFICATIONS__SUPPORT_ADDRESS = 'support@jibrel'
EMAIL_NOTIFICATIONS__MAX_ATTEMPTS = 3
EMAIL_NOTIFICATIONS__SENDGRID_DOMAINS = ["yahoo", "sina.cn", "increw.com.au", "moeboard.net", "hanmail.net", "daum.net"]

# Force scanning address
FORCE_SCANNING_ADDRESS__ENABLED = True
FORCE_SCANNING_ADDRESS__EMAIL_RECIPIENT = 'Jibrel Presale <presale@jibrel.network>'

# Mailgun API
MAILGUN__API_KEY = ""
MAILGUN__API_MESSAGES_URL = "https://api.mailgun.net/v3/mailgun.jibrel.network/messages"
MAILGUN__API_EVENTS_URL = "https://api.mailgun.net/v3/mailgun.jibrel.network/events"

# SendGrid API
SENDGRID__API_MESSAGES_URL = "https://api.sendgrid.com/api/mail.send.json"
SENDGRID__API_KEY = ""

# Logging
LOGGING__ROOT_DIR = ""
LOGGING__SQLALCHEMY_ECHO = False

# recaptcha settings
RECAPTCHA__VERIFY__ENABLED = False
RECAPTCHA__SECRET__KEY = ""

LOGIN_REDIRECT_URL = '/'

# Bitfinex config
BITFINEX__TIMEOUT = 1

# Proxies
CRAWLER_PROXY__ENABLED = True
CRAWLER_PROXY__USER = ""
CRAWLER_PROXY__PASS = ""
CRAWLER_PROXY__URLS = [
    "199.115.116.233:1051",
    "199.115.116.233:1052",
    "199.115.116.233:1053",
    "199.115.116.233:1054",
    "199.115.116.233:1055",
    "199.115.116.233:1056",
    "199.115.116.233:1057",
    "199.115.116.233:1058",
    "199.115.116.233:1059",
    "199.115.116.233:1060",
    "199.115.116.233:1061",
    "199.115.116.233:1062",
    "199.115.116.233:1063",
    "199.115.116.233:1064",
    "199.115.116.233:1065",
    "199.115.116.233:1066",
    "199.115.116.233:1067",
    "199.115.116.233:1068",
    "199.115.116.233:1069",
    "199.115.116.233:1070",
    "199.115.116.233:1071",
    "199.115.116.233:1072",
    "199.115.116.233:1073",
    "199.115.116.233:1074",
    "199.115.116.233:1075",
    "199.115.116.233:1076",
    "199.115.116.233:1077",
    "199.115.116.233:1078",
    "199.115.116.233:1079",
    "199.115.116.233:1080",
    "199.115.116.233:1081",
    "199.115.116.233:1082",
    "199.115.116.233:1083",
    "199.115.116.233:1084",
    "199.115.116.233:1085",
    "199.115.116.233:1086",
    "199.115.116.233:1087",
    "199.115.116.233:1088",
    "199.115.116.233:1089",
    "199.115.116.233:1090",
    "199.115.116.233:1091",
    "199.115.116.233:1092",
    "199.115.116.233:1093",
    "199.115.116.233:1094",
    "199.115.116.233:1095",
    "199.115.116.233:1096",
    "199.115.116.233:1097",
    "199.115.116.233:1098",
    "199.115.116.233:1099",
    "199.115.116.233:1100"]

# Check mail delivery
CHECK_MAIL_DELIVERY__ENABLED = True
CHECK_MAIL_DELIVERY__DAYS_DEPTH = 4

appLogLevel = logging.DEBUG if DEBUG else logging.INFO
sqlAlchemyLogLevel = logging.WARNING if DEBUG else logging.ERROR
appHandlers = ['handler_console'] #, 'sentry']

mailFormat = '''
Message type:\t\t%(levelname)s
Location:\t\t%(pathname)s:%(lineno)d
Module:\t\t%(module)s
Function:\t\t%(funcName)s
Time:\t\t%(asctime)s
Message:
%(message)s
'''

LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'formatter_verbose': {
                'format': '%(asctime)s > %(threadName)s > %(levelname)s > %(name)s:%(lineno)d:%(funcName)s >>> %(message)s'
            },
            'formatter_brief': {
                'format': '%(asctime)s > %(levelname)s > %(message)s'
            },
            'formatter_mail': {
                'format': mailFormat
            },
        },
        'handlers': {
            'handler_console': {
                'formatter': 'formatter_verbose',
                'class': 'logging.StreamHandler',
                'stream': sys.stdout,
            },
            #'sentry': {
            #    'level': logging.ERROR,
            #    'class': 'raven.contrib.django.raven_compat.handlers.SentryHandler',
            #    'tags': {'custom-tag': 'x'},
            #},
        },
        'loggers': {
            '': {'handlers': appHandlers, 'level': appLogLevel, 'propagate': False},
            'sqlalchemy': {'handlers': appHandlers, 'level': sqlAlchemyLogLevel, 'propagate': False},
        },
    }


try:
    from jcash.settings_local import *
except ImportError:
    pass
